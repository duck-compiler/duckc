[
    {
        "type": "created",
        "timestamp": "2025-09-22T22:29:59.411314",
        "issue_id": "e3fa5ad134badef24dd7ba6e94b4fc18",
        "issue_title": "typeresolve for tests can be disabled when not in test mode",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "modified",
        "timestamp": "2025-09-22T22:29:59.411314",
        "issue_id": "69b37346e3eac68781c08fc1a401d903",
        "issue_title": "implement flatten for struct definitions",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-22T22:29:59.411314",
        "issue_id": "3c3f45d92d10006bc67f96b62fd1eb15",
        "issue_title": "this is currently a silent error - if there's one",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-17T01:37:22.728242",
        "issue_id": "da0532d17b7bc8b710213013d1b37916",
        "issue_title": "should this be mangled???? LOLOLOLO I DON\"T THINK SO",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-17T01:37:22.728242",
        "issue_id": "aa19c8b208294bd4019d3488cc77a473",
        "issue_title": "maybe don't to this string __else",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-10T23:16:09.456232",
        "issue_id": "e514f2aaa7e6dfc194295cef72572cdb",
        "issue_title": "use our scope resolution syntax",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-10T23:16:09.456232",
        "issue_id": "f5901928e8ad348259b064be2aa120b4",
        "issue_title": "[TSX] create tsx text parser",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-10T23:16:09.456232",
        "issue_id": "f2537132dfbc2e88b6faf1d9e12b4ee1",
        "issue_title": "mangle components in tsx",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-07T00:12:38.330850",
        "issue_id": "b05a3be51e7023df2cd03e0cf204af27",
        "issue_title": "HERE",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-07T00:12:38.330850",
        "issue_id": "eaa4be15ded1bf103d5de778e31aa3cf",
        "issue_title": "support generics in typeof",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-05T16:58:24.803655",
        "issue_id": "12b446958d28cded3ceb4bdc148bbcc1",
        "issue_title": "produce snapshot for the given error",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-05T03:39:39.962118",
        "issue_id": "935b0fb08b5fcf0488ad9faf018aae3b",
        "issue_title": "add span of else",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-05T03:39:39.962118",
        "issue_id": "a3650f4444ab9ce81767373110a1ce59",
        "issue_title": "check if typeexpr::any is correct for the else arm in pattern matching",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-05T03:39:39.962118",
        "issue_id": "aa19c8b208294bd4019d3488cc77a473",
        "issue_title": "maybe don't to this string __else",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T22:01:53.512690",
        "issue_id": "0086b69c22ddbacd6a9a2c01661b3395",
        "issue_title": "retrieve correct span for function defintions typeexpr",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T19:31:54.192973",
        "issue_id": "359f26cb5c9ff8e568aaf6bf6f397729",
        "issue_title": "respect additional identifer scopes like blocks and lambdas",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T19:31:54.192973",
        "issue_id": "036f9af09249885c01979f9b1e07dbb0",
        "issue_title": "type params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "6ea3f5e1bb98d03f9bd37d524217fe17",
        "issue_title": "require name and implement typing for structs",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "4dc6129b55b30463cb0f36dde3ca7e72",
        "issue_title": "fix this panic workaround",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "69b37346e3eac68781c08fc1a401d903",
        "issue_title": "implement flatten for struct definitions",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "6c9939b8b0a29c64f5c2bffbdcf4a555",
        "issue_title": "respect the new way to create structs",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "202b2ce4592d068b06fc02af378d6ce3",
        "issue_title": "generic type name",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "ef80848b952d1bcd90960a8f1f295cd2",
        "issue_title": "let's discuss if we should use asserts for compiler internal errors.",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "cfd712843928e94008314c58c4efabb7",
        "issue_title": "discuss if we enable generic functions being called from go and how",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-09-04T13:57:50.797180",
        "issue_id": "29732f89deff9557a011fb6fe3d1d8d6",
        "issue_title": "add span for generic types",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-24T22:43:39.032967",
        "issue_id": "0bf1fe21fe0b13b6e5303ca5ec7e0fc7",
        "issue_title": "handle indices of type ! properly (do it in rest of emit too)",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-24T22:43:39.032967",
        "issue_id": "4f45d69c29b964d51ba20cd63a1c09c3",
        "issue_title": "check if we really want to unconst tuple values",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-24T22:43:39.032967",
        "issue_id": "1b16fc52b6cf377f9270c5ded9fad4d1",
        "issue_title": "Implement other literal types",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-24T22:43:39.032967",
        "issue_id": "7fe1ded730721d8e4c33c68e53350800",
        "issue_title": "check against identity of struct in typechecking",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-24T22:43:39.032967",
        "issue_id": "514af71611f0eae8e0992677743467e6",
        "issue_title": "discuss if we just allow passing ints as floats",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "29732f89deff9557a011fb6fe3d1d8d6",
        "issue_title": "add span for generic types",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "67253afb2d99d44e686ad77b0cd44619",
        "issue_title": "check if we'd rather sort after generic generation",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "cfd712843928e94008314c58c4efabb7",
        "issue_title": "discuss if we enable generic functions being called from go and how",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "ef80848b952d1bcd90960a8f1f295cd2",
        "issue_title": "let's discuss if we should use asserts for compiler internal errors.",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "2339dee19dc7245046537fad08ea4981",
        "issue_title": "type params",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "ab171c08521638216687559985056db6",
        "issue_title": "move checks from typeresolve to typecheck",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-08-13T00:29:24.227841",
        "issue_id": "43c698b9ccfda7bb0caf324b731f1736",
        "issue_title": "create some kind of type which indicates that this type needs to be replaced later on.",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-17T01:01:31.194238",
        "issue_id": "43c698b9ccfda7bb0caf324b731f1736",
        "issue_title": "create some kind of type which indicates that this type needs to be replaced later on.",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "d88487426dd3021adb46f020314162a1",
        "issue_title": "type_params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "58d8a60b9166dde326b6e743875d268e",
        "issue_title": "do this for all dependencies",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "202b2ce4592d068b06fc02af378d6ce3",
        "issue_title": "generic type name",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "1a3c3687cab095dc5f1ae0f6e2b8db70",
        "issue_title": "discuss unnamed paramters in fn typeexpr",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "f106d45a2f0896c577cbc389a0884150",
        "issue_title": "allow no return type in fn's type expr",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "ede746e83292bef642d1339ebd328a06",
        "issue_title": "Here's an TODO, which had no title.",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "a6f91bc2a692c4b163dc4fe437a7501f",
        "issue_title": "type definition testing",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "2f878b6ff80b3a8f3cebcdff3aba8c5d",
        "issue_title": "type_params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "d5e513c591a5789260576a8da04f76f0",
        "issue_title": "type params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "61a150d8a9fd7d63506c740228dd8469",
        "issue_title": "type_params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "2339dee19dc7245046537fad08ea4981",
        "issue_title": "type params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "a9b77426019384d5443b8c48cd58c136",
        "issue_title": "type_params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-14T09:44:03.702259",
        "issue_id": "c7792e84ea51d671bb93a84f261caacb",
        "issue_title": "type params",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "closed",
        "timestamp": "2025-07-10T15:20:56.914342",
        "issue_id": "20efba7e95b02ea3114558dc329acedf",
        "issue_title": "Please do something",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "modified",
        "timestamp": "2025-07-10T15:19:11.909968",
        "issue_id": "20efba7e95b02ea3114558dc329acedf",
        "issue_title": "Please do something",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-10T15:17:27.959302",
        "issue_id": "20efba7e95b02ea3114558dc329acedf",
        "issue_title": "Please do something",
        "author_info": {
            "name": "Mvmo",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-10T02:06:00.308700",
        "issue_id": "8d0660ae75477e8a06503be8ae6848e1",
        "issue_title": "code doc generation, using doc comments",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-10T02:06:00.308700",
        "issue_id": "eb4a395c84ed93287f8bbaac2c05b6a0",
        "issue_title": "discuss if \u03c0 should be an valid identifier",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-10T02:06:00.308700",
        "issue_id": "eee19c9eacf8b0e692691cbb8b5b5f48",
        "issue_title": "divide token",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:22:20.781476",
        "issue_id": "d1adb05842916005a85d085735ffd01a",
        "issue_title": "respect additional identifer scopes like blocks and lambdas",
        "author_info": {
            "name": "Apfelfrosch",
            "email": "146665916+Apfelfrosch@users.noreply.github.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "db78c3868bfd00b2907df35f4d989684",
        "issue_title": "resolve returns in main function to use the exit() fn of go, or wrap the code of the main function into a second function which then get's called inside a new main which just returns exit(other_main())",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "da0532d17b7bc8b710213013d1b37916",
        "issue_title": "should this be mangled???? LOLOLOLO I DON\"T THINK SO",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "98b8f42243c552b825f2f86f536dee5b",
        "issue_title": "check if this is correct",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "55858862493c535dec82e483d164ad99",
        "issue_title": "check if this should be a reference",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "7ca202446ad9d30d5c9dd75fcc8f32cb",
        "issue_title": "mvmo - 03.07.2025: this should check if the last is without a semicolon",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "55b87cf3bb4499e965e33b5e4efe9c0f",
        "issue_title": "todo!() in value.rs @ line 785",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "08d4ea6633203a66f7130937bdba9646",
        "issue_title": "add correct return type of block",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "fcb3f9eb5327dfccc556c11af2cad15a",
        "issue_title": "!(\"combine then and else, then return combined type\");",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "1bc39227f7b86613ca803ab82b8f6b34",
        "issue_title": "Match Expressions need to be type resolved just as the function defs",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "ab171c08521638216687559985056db6",
        "issue_title": "move checks from typeresolve to typecheck",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "eafb30b0c424a5220951f6aa028f8a3d",
        "issue_title": "typeinference",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "85e0c950789d9ad5d875a7db05b97130",
        "issue_title": "add spans",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    },
    {
        "type": "created",
        "timestamp": "2025-07-09T23:15:12.304401",
        "issue_id": "fe7bbea4368102b886c67bf2bedada4a",
        "issue_title": "windows :(",
        "author_info": {
            "name": "Maurice Schmidt",
            "email": "mvmogo@gmail.com"
        }
    }
]