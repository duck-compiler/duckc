use go "fmt";

module X {
    use Y::{c};
    use std::io::{println};

    fn a() {
        ::abc();
        std::io::println("hallo");
        println("hallo 2");
    }

    module Y {
        fn b() {
            ::X::a();
        }

        fn c() {
            go {
                fmt.Println("Hallo von c")
            }
        }

        fn testi() {
            go {
                fmt.Println("testi")
            }
        }

        module ZZ {
            fn zz() {
                go {
                    fmt.Println("ZZ")
                }
            }
        }

        module XXX {
            fn zz() {
                let x: go any | .none = .none;
                go {
                    x = xxx;
                }
                go {
                    fmt.Println("XXX ZZ")
                }
            }

            fn xxx() {
                go {
                    fmt.Println("XXX xxx")
                }
            }
        }

    }

    fn call_c() {
        c();
        Y::testi();
        Y::ZZ::zz();
    }

}

use X::Y::ZZ::{zz};
use X::Y::{ZZ};
use X::{Y};

fn main() {
    X::a();
    X::Y::b();
    X::call_c();
    X::Y::ZZ::zz();
    zz();
    go {
        fmt.Println(1)
    }
    ZZ::zz();
    Y::XXX::zz();
    Y::XXX::xxx();
    xxx();
}

fn xxx() {
    go {
        fmt.Println("main xxx")
    }
}

fn abc() {
    go {
        fmt.Println("hell from abc")
    }
}
