use go "strings";
use go "strconv";

fn to_upper(s: String) -> String {
    let res: String = "";
    go {
        res = ConcDuckString { value: strings.ToUpper(s.as_dgo_string()) }
    }
    return res;
}

test "strings: to_upper" {
    let x: String = "Hallo, Welt"->to_upper();
    if (x != "HALLO, WELT") {
        go {
            panic("expected x to be 'HALLO, WELT' but it wasn't")
        }
    }
}

fn to_lower(s: String) -> String {
    let res: String = "";
    go {
        res = ConcDuckString { value: strings.ToLower(s.as_dgo_string()) }
    }
    return res;
}

fn from_int(x: Int) -> String {
    let res: String = "";
    go {
        tmp := strconv.Itoa(x.as_dgo_int())
        res = ConcDuckString { value: tmp }
    }
    return res;
}

fn to_int(x: String) -> Int {
    let res: Int = 0;
    go {
        tmp, _ := strconv.Atoi(x.as_dgo_string())
        res = ConcDuckInt { value: tmp }
    }
    return res;
}

fn from_bool(x: Bool) -> String {
    let res: String = "";
    go {
        tmp := strconv.FormatBool(x.as_dgo_bool())
        res = ConcDuckString { value: tmp }
    }
    return res;
}
